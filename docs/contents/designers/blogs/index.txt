[h2]Blogs/Archives Module[/h2]

**Note: For all intents and purposes, the products of the Blogs/Archives module will be simply referred to as "Blogs" from here on out.  This module
just produces content listings and can be used for either purpose (and many other purposes too, if you get creative).**

[h2]Simply Displaying the Blog/Archive Content Listing[/h2]

Blogs display a list of content based on filters that you set you in the control panel.  For example, you may have a blog that shows content with a Topic
of "Presidential News".  At this blog page, the blog module will retrieve the latest content with your parameters and allow you to loop through
and display this content in the template.  It will also produce a CSS-friendly pagination HTML code snippet for you to use in your templates
so that people can browse through the content page-by-page. 

In your blog template file (customizable when creating the blog), there will be the following variables available:

* [span_code]{$content}[/span_code] - The array of content.  Each item has the standard content variables defined [designers/publish](in the Publish module).
* [span_code]{$pagination}[/span_code] - A [span_code]<ul>[/span_code]-formatted list of pagination links automatically generated.

[h2]Advanced Technique: Searchable, Filter-able Archive/Blog Listing Pages[/h2]

The following template, or variations of it, are included in most standard themes.  It provides a great example of how to use standard
[APPNAME] template tags to create a searchable, browseable, filter-able archives page for your content.  This template will be triggered
by a Blog you create in the control panel, but it will actually ignore any of your settings as all of the content is filtered
and retrieved from directly within the template.

All of this code magic is done with the [designers/template_plugins](paginate) and [designers/publish](content) template plugins as well as
standard [http://www.smarty.net](Smarty) tags like [span_code]assign[/span_code].

Below is the full template, for advanced designer/developer usage:

[code]
{extends file="layout.thtml"}
{block name="title"}
{$title} - {$smarty.block.parent}
{/block}
{block name="content"}
	<h1>{$title}</h1>
	<div id="archive_toolbar">
		<form class="validate" method="get" action="{$url}">
		<h3>Filters</h3>
		
		{* let's use the filters may be passed *}
			{if $smarty.get.keyword and $smarty.get.keyword != ""}
				{assign var="filter_keyword" value=$smarty.get.keyword}
			{else}
				{assign var="filter_keyword" value=FALSE}
			{/if}
			{if $smarty.get.topic and $smarty.get.topic != ""}
				{assign var="filter_topic" value=$smarty.get.topic}
			{else}
				{assign var="filter_topic" value=FALSE}
			{/if}
			{if $smarty.get.sort and $smarty.get.sort == "newest"}
				{assign var="filter_sort" value="content_date"}
				{assign var="filter_sort_dir" value="DESC"}
			{elseif $smarty.get.sort and $smarty.get.sort == "oldest"}
				{assign var="filter_sort" value="content_date"}
				{assign var="filter_sort_dir" value="ASC"}
			{elseif $smarty.get.sort and $smarty.get.sort == "popularity"}
				{assign var="filter_sort" value="content_hits"}
				{assign var="filter_sort_dir" value="DESC"}
			{else}
				{assign var="filter_sort" value="content_date"}
				{assign var="filter_sort_dir" value="DESC"}
			{/if}
		{* end filter preparation *}
		
		<ul>
			<li>
				<h4>Keyword</h4>
				<input type="text" class="text mark_empty" rel="enter keyword(s)" name="keyword" value="{$filter_keyword}" />
			</li>
			<li>
				<h4>Topic</h4>
				<select name="topic">
					<option value="" {if !$filter_topic}selected="selected"{/if}>All Topics</option>
					{topics var="topic"}<option value="{$topic.id}">{$topic.name}</option>{/topics}
				</select>
			</li>
			<li>
				<h4>Sort By</h4>
				<select name="sort">
					<option value="newest" {if $smarty.get.sort == "newest"}selected="selected"{/if}>Newest First</option>
					<option value="oldest" {if $smarty.get.sort == "oldset"}selected="selected"{/if}>Oldest First</option>
					<option value="popularity" {if $smarty.get.sort == "popularity"}selected="selected"{/if}>Popularity</option>
				</select>
			</li>
			<li class="submit">
				<input type="submit" class="button" value="Find" />
			</li>
			<li class="submit">
				<a href="{$url}">Clear Filters</a>
			</li>
		</ul>
		
		</form>
	</div>
	
	<div class="archives">
		
		<ul class="archives">
		
		{if $smarty.get.p}
		{assign var="offset" value=$smarty.get.p}
		{/if}
		
		{content var="article" type="1" limit="25" offset=$offset keyword=$filter_keyword topic=$filter_topic sort=$filter_sort sort_dir=$filter_sort_dir}
			<li>
				<div class="archive_date">
					{$article.date|date_format: "%b.%d.%Y"}
				</div>
				
				<a class="title" href="{$article.url}">{$article.title}</a>
			</li>
		{/content}
		
		{if $content_total_count == 0}
		<p>No archive items match your filters.</p>
		{/if}
		
		</ul>
		
		{paginate base_url="$current_url" total_rows=$content_total_count per_page=25 variable="p"}
	</div>
{/block}
[/code]